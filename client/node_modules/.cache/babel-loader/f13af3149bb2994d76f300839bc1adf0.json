{"ast":null,"code":"var _jsxFileName = \"/home/ekaterina/quiz/client/src/app/components/questions/Questions.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; // import {Quiz} from \"src/app/logic/model/Quiz\";\n\nimport styles from \"src/app/components/button/Button.module.scss\"; // import {quizService} from \"src/app/services/ServiceInitialization\";\n\nimport useHooks from \"./UseHooks\"; // Question component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Questions = () => {\n  _s();\n\n  // const [score, setScore] = useState<number>(0);\n  // const [questionIndex, setQuestionIndex] = useState<number>(0);\n  // const [answer, setAnswer] = useState<string>(\"\");\n  // const [data] = useFunc();\n  // [score, questionIndex, answer, data, trash]\n  const [score, questionIndex, answer, data, {\n    onChange,\n    submit,\n    restart\n  }] = useHooks(); // const [data, setData] = useState<Quiz[]>([]);\n  // const loadData: () => void = async () => {\n  //   const newData: Quiz[] = await quizService.getData();\n  //   setData(newData);\n  // };\n  // useEffect(() => {\n  //   loadData();\n  // }, []);\n  // Function for set Score to 0\n  // const restart: () => void = () => {\n  //   setScore(0);\n  //   setAnswer(\"\");\n  //   setQuestionIndex(0);\n  // };\n  // Function for to send answer. If its right answer - number of points grow\n  // const submit: (event: React.MouseEvent) => void = (\n  //   event: React.MouseEvent,\n  // ) => {\n  //   event.preventDefault();\n  //   if (data) {\n  //     const isRightAnswer: boolean = answer === data[questionIndex]?.rightAnswer;\n  //     if (isRightAnswer) {\n  //       setScore(score + 1);\n  //     }\n  //\n  //     const isMoreQuestionsAvailable: boolean = questionIndex < data.length;\n  //     if (isMoreQuestionsAvailable) {\n  //       setQuestionIndex(questionIndex + 1);\n  //     }\n  //   }\n  // };\n  // const onChange: (e: React.ChangeEvent<HTMLInputElement>) => void = (e: React.ChangeEvent<HTMLInputElement>) => {\n  //   setAnswer(e.target.value);\n  // };\n  // If index less then length of array with questions, then new question will show on the page, if not - then result will show\n\n  if (data && questionIndex) {\n    if (questionIndex < data.length) {\n      var _data$questionIndex, _data$questionIndex2;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: (_data$questionIndex = data[questionIndex]) === null || _data$questionIndex === void 0 ? void 0 : _data$questionIndex.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), (_data$questionIndex2 = data[questionIndex]) === null || _data$questionIndex2 === void 0 ? void 0 : _data$questionIndex2.choices.map(c => {\n          var _data$questionIndex3;\n\n          return /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"choice\",\n                value: c,\n                onChange: onChange,\n                checked: answer === c\n              }, (_data$questionIndex3 = data[questionIndex]) === null || _data$questionIndex3 === void 0 ? void 0 : _data$questionIndex3.key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: c\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, this)\n          }, c, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.btn,\n          type: \"button\",\n          onClick: submit,\n          children: \"check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"score:\", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.btn,\n        type: \"button\",\n        onClick: restart,\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"score:\", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Questions, \"mkrVvWxZdH2Y2WrbfYNfmHxFWHk=\", false, function () {\n  return [useHooks];\n});\n\n_c = Questions;\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","styles","useHooks","Questions","score","questionIndex","answer","data","onChange","submit","restart","length","question","choices","map","c","key","btn"],"sources":["/home/ekaterina/quiz/client/src/app/components/questions/Questions.tsx"],"sourcesContent":["import React from \"react\";\n// import {Quiz} from \"src/app/logic/model/Quiz\";\nimport styles from \"src/app/components/button/Button.module.scss\";\n// import {quizService} from \"src/app/services/ServiceInitialization\";\nimport useFunc from \"./UseFunctions\";\nimport useHooks from \"./UseHooks\";\n\n// Question component\nconst Questions: React.FC = () => {\n  // const [score, setScore] = useState<number>(0);\n  // const [questionIndex, setQuestionIndex] = useState<number>(0);\n  // const [answer, setAnswer] = useState<string>(\"\");\n\t// const [data] = useFunc();\n\t// [score, questionIndex, answer, data, trash]\n  const [score, questionIndex, answer, data, {onChange, submit, restart}] = useHooks();\n\n  // const [data, setData] = useState<Quiz[]>([]);\n  // const loadData: () => void = async () => {\n  //   const newData: Quiz[] = await quizService.getData();\n  //   setData(newData);\n  // };\n  // useEffect(() => {\n  //   loadData();\n  // }, []);\n\n  // Function for set Score to 0\n  // const restart: () => void = () => {\n  //   setScore(0);\n  //   setAnswer(\"\");\n  //   setQuestionIndex(0);\n  // };\n\n  // Function for to send answer. If its right answer - number of points grow\n  // const submit: (event: React.MouseEvent) => void = (\n  //   event: React.MouseEvent,\n  // ) => {\n  //   event.preventDefault();\n  //   if (data) {\n  //     const isRightAnswer: boolean = answer === data[questionIndex]?.rightAnswer;\n  //     if (isRightAnswer) {\n  //       setScore(score + 1);\n  //     }\n  //\n  //     const isMoreQuestionsAvailable: boolean = questionIndex < data.length;\n  //     if (isMoreQuestionsAvailable) {\n  //       setQuestionIndex(questionIndex + 1);\n  //     }\n  //   }\n  // };\n\n  // const onChange: (e: React.ChangeEvent<HTMLInputElement>) => void = (e: React.ChangeEvent<HTMLInputElement>) => {\n  //   setAnswer(e.target.value);\n  // };\n\n  // If index less then length of array with questions, then new question will show on the page, if not - then result will show\n  if (data && questionIndex) {\n    if (questionIndex < data.length) {\n      return (\n        <div>\n          <label><h3>{data[questionIndex]?.question}</h3></label>\n          {data[questionIndex]?.choices.map((c: string) => {\n            return (\n              <h5 key={c}>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"choice\"\n                    value={c}\n                    onChange={onChange}\n                    checked={answer === c}\n                    key={data[questionIndex]?.key}\n                  />\n                  <span>{c}</span>\n                </label>\n              </h5>\n            );\n          })}\n\n          <button\n            className={styles.btn}\n            type=\"button\"\n            onClick={submit}\n          >\n            check\n          </button>\n\n          <p>\n            score:\n            {score}\n          </p>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <form>\n      <div>\n        <button\n          className={styles.btn}\n          type=\"button\"\n          onClick={restart}\n        >\n          Restart\n        </button>\n      </div>\n      <h5>\n        score:\n        {score}\n      </h5>\n    </form>\n  );\n};\n\nexport default Questions;"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,8CAAnB,C,CACA;;AAEA,OAAOC,QAAP,MAAqB,YAArB,C,CAEA;;;;AACA,MAAMC,SAAmB,GAAG,MAAM;EAAA;;EAChC;EACA;EACA;EACD;EACA;EACC,MAAM,CAACC,KAAD,EAAQC,aAAR,EAAuBC,MAAvB,EAA+BC,IAA/B,EAAqC;IAACC,QAAD;IAAWC,MAAX;IAAmBC;EAAnB,CAArC,IAAoER,QAAQ,EAAlF,CANgC,CAQhC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EAEA;;EACA,IAAIK,IAAI,IAAIF,aAAZ,EAA2B;IACzB,IAAIA,aAAa,GAAGE,IAAI,CAACI,MAAzB,EAAiC;MAAA;;MAC/B,oBACE;QAAA,wBACE;UAAA,uBAAO;YAAA,iCAAKJ,IAAI,CAACF,aAAD,CAAT,wDAAK,oBAAqBO;UAA1B;YAAA;YAAA;YAAA;UAAA;QAAP;UAAA;UAAA;UAAA;QAAA,QADF,0BAEGL,IAAI,CAACF,aAAD,CAFP,yDAEG,qBAAqBQ,OAArB,CAA6BC,GAA7B,CAAkCC,CAAD,IAAe;UAAA;;UAC/C,oBACE;YAAA,uBACE;cAAA,wBACE;gBACE,IAAI,EAAC,OADP;gBAEE,IAAI,EAAC,QAFP;gBAGE,KAAK,EAAEA,CAHT;gBAIE,QAAQ,EAAEP,QAJZ;gBAKE,OAAO,EAAEF,MAAM,KAAKS;cALtB,2BAMOR,IAAI,CAACF,aAAD,CANX,yDAMO,qBAAqBW,GAN5B;gBAAA;gBAAA;gBAAA;cAAA,QADF,eASE;gBAAA,UAAOD;cAAP;gBAAA;gBAAA;gBAAA;cAAA,QATF;YAAA;cAAA;cAAA;cAAA;YAAA;UADF,GAASA,CAAT;YAAA;YAAA;YAAA;UAAA,QADF;QAeD,CAhBA,CAFH,eAoBE;UACE,SAAS,EAAEd,MAAM,CAACgB,GADpB;UAEE,IAAI,EAAC,QAFP;UAGE,OAAO,EAAER,MAHX;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QApBF,eA4BE;UAAA,qBAEGL,KAFH;QAAA;UAAA;UAAA;UAAA;QAAA,QA5BF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF;IAmCD;EACF;;EAED,oBACE;IAAA,wBACE;MAAA,uBACE;QACE,SAAS,EAAEH,MAAM,CAACgB,GADpB;QAEE,IAAI,EAAC,QAFP;QAGE,OAAO,EAAEP,OAHX;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAUE;MAAA,qBAEGN,KAFH;IAAA;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CAxGD;;GAAMD,S;UAMsED,Q;;;KANtEC,S;AA0GN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}