{"ast":null,"code":"// import {QuizRound} from \"../model/QuizRoundModel\";\nimport { FetchMethod } from \"./enu\";\nexport const request = async (url, method) => {\n  // const stringifiedBody = JSON.stringify(body);\n  const rawResponse = await fetch(url, {\n    method // body: stringifiedBody,\n\n  }); // обработка ответа\n\n  if (rawResponse.ok) {\n    return method !== FetchMethod.DELETE ? rawResponse.json() : undefined;\n  }\n\n  throw new Error(String(rawResponse.status));\n};","map":{"version":3,"names":["FetchMethod","request","url","method","rawResponse","fetch","ok","DELETE","json","undefined","Error","String","status"],"sources":["/home/ekaterina/quiz/client/src/app/service/request.ts"],"sourcesContent":["// import {QuizRound} from \"../model/QuizRoundModel\";\nimport {FetchMethod} from \"./enu\";\n\nexport const request = async (url: string, method: FetchMethod): Promise<any> => {\n  // const stringifiedBody = JSON.stringify(body);\n  const rawResponse = await fetch(url, {\n    method,\n  // body: stringifiedBody,\n  });\n\n  // обработка ответа\n  if (rawResponse.ok) {\n    return method !== FetchMethod.DELETE\n      ? rawResponse.json()\n      : undefined;\n  }\n\n  throw new Error(String(rawResponse.status));\n};"],"mappings":"AAAA;AACA,SAAQA,WAAR,QAA0B,OAA1B;AAEA,OAAO,MAAMC,OAAO,GAAG,OAAOC,GAAP,EAAoBC,MAApB,KAA0D;EAC/E;EACA,MAAMC,WAAW,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;IACnCC,MADmC,CAErC;;EAFqC,CAAN,CAA/B,CAF+E,CAO/E;;EACA,IAAIC,WAAW,CAACE,EAAhB,EAAoB;IAClB,OAAOH,MAAM,KAAKH,WAAW,CAACO,MAAvB,GACHH,WAAW,CAACI,IAAZ,EADG,GAEHC,SAFJ;EAGD;;EAED,MAAM,IAAIC,KAAJ,CAAUC,MAAM,CAACP,WAAW,CAACQ,MAAb,CAAhB,CAAN;AACD,CAfM"},"metadata":{},"sourceType":"module"}