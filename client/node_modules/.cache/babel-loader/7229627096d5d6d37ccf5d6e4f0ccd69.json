{"ast":null,"code":"var _jsxFileName = \"/home/ekaterina/quiz/client/src/app/components/questions/Questions.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\"; // import {Quiz} from \"src/app/logic/model/Quiz\";\n\nimport styles from \"src/app/components/button/Button.module.scss\";\nimport { quizService } from \"src/app/services/ServiceInitialization\";\nimport useFunc from \"./UseFunctions\"; // Question component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Questions = () => {\n  _s();\n\n  const [score, setScore] = useState(0);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [answer, setAnswer] = useState(\"\");\n  const [data] = useFunc(quizService.getData()); // const [data, setData] = useState<Quiz[]>([]);\n  // const loadData: () => void = async () => {\n  //   const newData: Quiz[] = await quizService.getData();\n  //   setData(newData);\n  // };\n  // useEffect(() => {\n  //   loadData();\n  // }, []);\n  // Function for set Score to 0\n\n  const restart = () => {\n    setScore(0);\n    setAnswer(\"\");\n    setQuestionIndex(0);\n  }; // Function for to send answer. If its right answer - number of points grow\n\n\n  const submit = event => {\n    event.preventDefault();\n\n    if (data) {\n      var _data$questionIndex;\n\n      const isRightAnswer = answer === ((_data$questionIndex = data[questionIndex]) === null || _data$questionIndex === void 0 ? void 0 : _data$questionIndex.rightAnswer);\n\n      if (isRightAnswer) {\n        setScore(score + 1);\n      }\n\n      const isMoreQuestionsAvailable = questionIndex < data.length;\n\n      if (isMoreQuestionsAvailable) {\n        setQuestionIndex(questionIndex + 1);\n      }\n    }\n  };\n\n  const onChange = e => {\n    setAnswer(e.target.value);\n  }; // If index less then length of array with questions, then new question will show on the page, if not - then result will show\n\n\n  if (data) {\n    if (questionIndex < data.length) {\n      var _data$questionIndex2, _data$questionIndex3;\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: /*#__PURE__*/_jsxDEV(\"h3\", {\n            children: (_data$questionIndex2 = data[questionIndex]) === null || _data$questionIndex2 === void 0 ? void 0 : _data$questionIndex2.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), (_data$questionIndex3 = data[questionIndex]) === null || _data$questionIndex3 === void 0 ? void 0 : _data$questionIndex3.choices.map(c => {\n          var _data$questionIndex4;\n\n          return /*#__PURE__*/_jsxDEV(\"h5\", {\n            children: /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"radio\",\n                name: \"choice\",\n                value: c,\n                onChange: onChange,\n                checked: answer === c\n              }, (_data$questionIndex4 = data[questionIndex]) === null || _data$questionIndex4 === void 0 ? void 0 : _data$questionIndex4.key, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: c\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)\n          }, c, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: styles.btn,\n          type: \"button\",\n          onClick: submit,\n          children: \"check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"score:\", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.btn,\n        type: \"button\",\n        onClick: restart,\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"score:\", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Questions, \"MOyGE1ktbFBoevh5vivyznUAoBo=\", false, function () {\n  return [useFunc];\n});\n\n_c = Questions;\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","useState","styles","quizService","useFunc","Questions","score","setScore","questionIndex","setQuestionIndex","answer","setAnswer","data","getData","restart","submit","event","preventDefault","isRightAnswer","rightAnswer","isMoreQuestionsAvailable","length","onChange","e","target","value","question","choices","map","c","key","btn"],"sources":["/home/ekaterina/quiz/client/src/app/components/questions/Questions.tsx"],"sourcesContent":["import React, {useState} from \"react\";\n// import {Quiz} from \"src/app/logic/model/Quiz\";\nimport styles from \"src/app/components/button/Button.module.scss\";\nimport {quizService} from \"src/app/services/ServiceInitialization\";\nimport useFunc from \"./UseFunctions\";\n\n// Question component\nconst Questions: React.FC = () => {\n  const [score, setScore] = useState<number>(0);\n  const [questionIndex, setQuestionIndex] = useState<number>(0);\n  const [answer, setAnswer] = useState<string>(\"\");\n\n  const [data] = useFunc(quizService.getData());\n\n  // const [data, setData] = useState<Quiz[]>([]);\n  // const loadData: () => void = async () => {\n  //   const newData: Quiz[] = await quizService.getData();\n  //   setData(newData);\n  // };\n  // useEffect(() => {\n  //   loadData();\n  // }, []);\n\n  // Function for set Score to 0\n  const restart: () => void = () => {\n    setScore(0);\n    setAnswer(\"\");\n    setQuestionIndex(0);\n  };\n\n  // Function for to send answer. If its right answer - number of points grow\n  const submit: (event: React.MouseEvent) => void = (\n    event: React.MouseEvent,\n  ) => {\n    event.preventDefault();\n    if (data) {\n      const isRightAnswer: boolean = answer === data[questionIndex]?.rightAnswer;\n      if (isRightAnswer) {\n        setScore(score + 1);\n      }\n\n      const isMoreQuestionsAvailable: boolean = questionIndex < data.length;\n      if (isMoreQuestionsAvailable) {\n        setQuestionIndex(questionIndex + 1);\n      }\n    }\n  };\n\n  const onChange: (e: React.ChangeEvent<HTMLInputElement>) => void = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setAnswer(e.target.value);\n  };\n\n  // If index less then length of array with questions, then new question will show on the page, if not - then result will show\n  if (data) {\n    if (questionIndex < data.length) {\n      return (\n        <div>\n          <label><h3>{data[questionIndex]?.question}</h3></label>\n          {data[questionIndex]?.choices.map((c: string) => {\n            return (\n              <h5 key={c}>\n                <label>\n                  <input\n                    type=\"radio\"\n                    name=\"choice\"\n                    value={c}\n                    onChange={onChange}\n                    checked={answer === c}\n                    key={data[questionIndex]?.key}\n                  />\n                  <span>{c}</span>\n                </label>\n              </h5>\n            );\n          })}\n\n          <button\n            className={styles.btn}\n            type=\"button\"\n            onClick={submit}\n          >\n            check\n          </button>\n\n          <p>\n            score:\n            {score}\n          </p>\n        </div>\n      );\n    }\n  }\n\n  return (\n    <form>\n      <div>\n        <button\n          className={styles.btn}\n          type=\"button\"\n          onClick={restart}\n        >\n          Restart\n        </button>\n      </div>\n      <h5>\n        score:\n        {score}\n      </h5>\n    </form>\n  );\n};\n\nexport default Questions;"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B,C,CACA;;AACA,OAAOC,MAAP,MAAmB,8CAAnB;AACA,SAAQC,WAAR,QAA0B,wCAA1B;AACA,OAAOC,OAAP,MAAoB,gBAApB,C,CAEA;;;;AACA,MAAMC,SAAmB,GAAG,MAAM;EAAA;;EAChC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAS,CAAT,CAAlC;EACA,MAAM,CAACO,aAAD,EAAgBC,gBAAhB,IAAoCR,QAAQ,CAAS,CAAT,CAAlD;EACA,MAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAS,EAAT,CAApC;EAEA,MAAM,CAACW,IAAD,IAASR,OAAO,CAACD,WAAW,CAACU,OAAZ,EAAD,CAAtB,CALgC,CAOhC;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;;EACA,MAAMC,OAAmB,GAAG,MAAM;IAChCP,QAAQ,CAAC,CAAD,CAAR;IACAI,SAAS,CAAC,EAAD,CAAT;IACAF,gBAAgB,CAAC,CAAD,CAAhB;EACD,CAJD,CAjBgC,CAuBhC;;;EACA,MAAMM,MAAyC,GAC7CC,KADgD,IAE7C;IACHA,KAAK,CAACC,cAAN;;IACA,IAAIL,IAAJ,EAAU;MAAA;;MACR,MAAMM,aAAsB,GAAGR,MAAM,6BAAKE,IAAI,CAACJ,aAAD,CAAT,wDAAK,oBAAqBW,WAA1B,CAArC;;MACA,IAAID,aAAJ,EAAmB;QACjBX,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;MACD;;MAED,MAAMc,wBAAiC,GAAGZ,aAAa,GAAGI,IAAI,CAACS,MAA/D;;MACA,IAAID,wBAAJ,EAA8B;QAC5BX,gBAAgB,CAACD,aAAa,GAAG,CAAjB,CAAhB;MACD;IACF;EACF,CAfD;;EAiBA,MAAMc,QAA0D,GAAIC,CAAD,IAA4C;IAC7GZ,SAAS,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAT;EACD,CAFD,CAzCgC,CA6ChC;;;EACA,IAAIb,IAAJ,EAAU;IACR,IAAIJ,aAAa,GAAGI,IAAI,CAACS,MAAzB,EAAiC;MAAA;;MAC/B,oBACE;QAAA,wBACE;UAAA,uBAAO;YAAA,kCAAKT,IAAI,CAACJ,aAAD,CAAT,yDAAK,qBAAqBkB;UAA1B;YAAA;YAAA;YAAA;UAAA;QAAP;UAAA;UAAA;UAAA;QAAA,QADF,0BAEGd,IAAI,CAACJ,aAAD,CAFP,yDAEG,qBAAqBmB,OAArB,CAA6BC,GAA7B,CAAkCC,CAAD,IAAe;UAAA;;UAC/C,oBACE;YAAA,uBACE;cAAA,wBACE;gBACE,IAAI,EAAC,OADP;gBAEE,IAAI,EAAC,QAFP;gBAGE,KAAK,EAAEA,CAHT;gBAIE,QAAQ,EAAEP,QAJZ;gBAKE,OAAO,EAAEZ,MAAM,KAAKmB;cALtB,2BAMOjB,IAAI,CAACJ,aAAD,CANX,yDAMO,qBAAqBsB,GAN5B;gBAAA;gBAAA;gBAAA;cAAA,QADF,eASE;gBAAA,UAAOD;cAAP;gBAAA;gBAAA;gBAAA;cAAA,QATF;YAAA;cAAA;cAAA;cAAA;YAAA;UADF,GAASA,CAAT;YAAA;YAAA;YAAA;UAAA,QADF;QAeD,CAhBA,CAFH,eAoBE;UACE,SAAS,EAAE3B,MAAM,CAAC6B,GADpB;UAEE,IAAI,EAAC,QAFP;UAGE,OAAO,EAAEhB,MAHX;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QApBF,eA4BE;UAAA,qBAEGT,KAFH;QAAA;UAAA;UAAA;UAAA;QAAA,QA5BF;MAAA;QAAA;QAAA;QAAA;MAAA,QADF;IAmCD;EACF;;EAED,oBACE;IAAA,wBACE;MAAA,uBACE;QACE,SAAS,EAAEJ,MAAM,CAAC6B,GADpB;QAEE,IAAI,EAAC,QAFP;QAGE,OAAO,EAAEjB,OAHX;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAUE;MAAA,qBAEGR,KAFH;IAAA;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CAvGD;;GAAMD,S;UAKWD,O;;;KALXC,S;AAyGN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}