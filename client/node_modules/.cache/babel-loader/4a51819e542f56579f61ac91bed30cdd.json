{"ast":null,"code":"var _jsxFileName = \"/home/ekaterina/quiz/client/src/app/components/questions/Questions.tsx\";\nimport React from \"react\";\nimport styles from \"src/app/components/button/Button.module.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// Question component\nconst Questions = () => {\n  // If index less then length of array with questions, then new question will show on the page, if not - then result will show\n  if (questionIndex < data.length) {\n    var _data$questionIndex, _data$questionIndex2;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: (_data$questionIndex = data[questionIndex]) === null || _data$questionIndex === void 0 ? void 0 : _data$questionIndex.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }, this), (_data$questionIndex2 = data[questionIndex]) === null || _data$questionIndex2 === void 0 ? void 0 : _data$questionIndex2.choices.map(c => {\n        var _data$questionIndex3;\n\n        return /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"choice\",\n              value: c,\n              onChange: onChange,\n              checked: answer === c\n            }, (_data$questionIndex3 = data[questionIndex]) === null || _data$questionIndex3 === void 0 ? void 0 : _data$questionIndex3.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: c\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 15\n          }, this)\n        }, c, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.btn,\n        type: \"button\",\n        onClick: submit,\n        children: \"check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"score:\", UseFunc.score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.btn,\n        type: \"button\",\n        onClick: restart,\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"score:\", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Questions;\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","styles","Questions","questionIndex","data","length","question","choices","map","c","onChange","answer","key","btn","submit","UseFunc","score","restart"],"sources":["/home/ekaterina/quiz/client/src/app/components/questions/Questions.tsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {Quiz} from \"src/app/logic/model/Quiz\";\nimport styles from \"src/app/components/button/Button.module.scss\";\nimport {quizService} from \"../../services/ServiceInitialization\";\nimport useFunc from \"./UseFunctions\";\n\n// Question component\nconst Questions: React.FC = () => {\n\n  \n  // If index less then length of array with questions, then new question will show on the page, if not - then result will show\n  if (questionIndex < data.length) {\n    return (\n      <div>\n        <label><h3>{data[questionIndex]?.question}</h3></label>\n        {data[questionIndex]?.choices.map((c: string) => {\n          return (\n            <h5 key={c}>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"choice\"\n                  value={c}\n                  onChange={onChange}\n                  checked={answer === c}\n                  key= {data[questionIndex]?.key}\n                />\n                <span>{c}</span>\n              </label>\n            </h5>\n          );\n        })}\n\n        <button\n          className={styles.btn}\n          type=\"button\"\n          onClick={submit}\n        >\n          check\n        </button>\n\n        <p>\n          score:\n          {UseFunc.score}\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <form>\n      <div>\n        <button\n          className={styles.btn}\n          type=\"button\"\n          onClick={restart}\n        >\n          Restart\n        </button>\n      </div>\n      <h5>\n        score:\n        {score}\n      </h5>\n    </form>\n  );\n};\n\nexport default Questions;"],"mappings":";AAAA,OAAOA,KAAP,MAAyC,OAAzC;AAEA,OAAOC,MAAP,MAAmB,8CAAnB;;;AAIA;AACA,MAAMC,SAAmB,GAAG,MAAM;EAGhC;EACA,IAAIC,aAAa,GAAGC,IAAI,CAACC,MAAzB,EAAiC;IAAA;;IAC/B,oBACE;MAAA,wBACE;QAAA,uBAAO;UAAA,iCAAKD,IAAI,CAACD,aAAD,CAAT,wDAAK,oBAAqBG;QAA1B;UAAA;UAAA;UAAA;QAAA;MAAP;QAAA;QAAA;QAAA;MAAA,QADF,0BAEGF,IAAI,CAACD,aAAD,CAFP,yDAEG,qBAAqBI,OAArB,CAA6BC,GAA7B,CAAkCC,CAAD,IAAe;QAAA;;QAC/C,oBACE;UAAA,uBACE;YAAA,wBACE;cACE,IAAI,EAAC,OADP;cAEE,IAAI,EAAC,QAFP;cAGE,KAAK,EAAEA,CAHT;cAIE,QAAQ,EAAEC,QAJZ;cAKE,OAAO,EAAEC,MAAM,KAAKF;YALtB,2BAMQL,IAAI,CAACD,aAAD,CANZ,yDAMQ,qBAAqBS,GAN7B;cAAA;cAAA;cAAA;YAAA,QADF,eASE;cAAA,UAAOH;YAAP;cAAA;cAAA;cAAA;YAAA,QATF;UAAA;YAAA;YAAA;YAAA;UAAA;QADF,GAASA,CAAT;UAAA;UAAA;UAAA;QAAA,QADF;MAeD,CAhBA,CAFH,eAoBE;QACE,SAAS,EAAER,MAAM,CAACY,GADpB;QAEE,IAAI,EAAC,QAFP;QAGE,OAAO,EAAEC,MAHX;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QApBF,eA4BE;QAAA,qBAEGC,OAAO,CAACC,KAFX;MAAA;QAAA;QAAA;QAAA;MAAA,QA5BF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF;EAmCD;;EAED,oBACE;IAAA,wBACE;MAAA,uBACE;QACE,SAAS,EAAEf,MAAM,CAACY,GADpB;QAEE,IAAI,EAAC,QAFP;QAGE,OAAO,EAAEI,OAHX;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QADF,eAUE;MAAA,qBAEGD,KAFH;IAAA;MAAA;MAAA;MAAA;IAAA,QAVF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CA3DD;;KAAMd,S;AA6DN,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}