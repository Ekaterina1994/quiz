{"ast":null,"code":"export let FetchMethod;\n/** */\n\n(function (FetchMethod) {\n  FetchMethod[\"GET\"] = \"GET\";\n})(FetchMethod || (FetchMethod = {}));\n\nexport const request = async (url, method) => {\n  const rawResponse = await fetch(url, {\n    method\n  }); // throw new Error(String(rawResponse.status));\n};\nexport const fetchRequest = {\n  /**\n  * Создание get запроса\n  */\n  get: async url => {\n    return request(url, FetchMethod.GET);\n  }\n};","map":{"version":3,"names":["FetchMethod","request","url","method","rawResponse","fetch","fetchRequest","get","GET"],"sources":["/home/ekaterina/quiz/client/src/app/service/FetchUtils.ts"],"sourcesContent":["export enum FetchMethod {\n  GET = \"GET\",\n}\n\n/** */\nexport const request = async (url: string, method: FetchMethod): Promise<any> => {\n  const rawResponse = await fetch(url, {method});\n\n  // throw new Error(String(rawResponse.status));\n};\n\nexport const fetchRequest = {\n\n  /**\n\t * Создание get запроса\n\t */\n  get: async <T>(url: string): Promise<T> => { return request(url, FetchMethod.GET); },\n\n};"],"mappings":"AAAA,WAAYA,WAAZ;AAIA;;WAJYA,W;EAAAA,W;GAAAA,W,KAAAA,W;;AAKZ,OAAO,MAAMC,OAAO,GAAG,OAAOC,GAAP,EAAoBC,MAApB,KAA0D;EAC/E,MAAMC,WAAW,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;IAACC;EAAD,CAAN,CAA/B,CAD+E,CAG/E;AACD,CAJM;AAMP,OAAO,MAAMG,YAAY,GAAG;EAE1B;AACF;AACA;EACEC,GAAG,EAAE,MAAUL,GAAV,IAAsC;IAAE,OAAOD,OAAO,CAACC,GAAD,EAAMF,WAAW,CAACQ,GAAlB,CAAd;EAAuC;AAL1D,CAArB"},"metadata":{},"sourceType":"module"}