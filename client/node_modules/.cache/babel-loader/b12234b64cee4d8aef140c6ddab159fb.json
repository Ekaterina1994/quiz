{"ast":null,"code":"var _jsxFileName = \"/home/ekaterina/quiz/client/src/app/components/questions/Questions.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport styles from \"src/app/components/button/Button.module.scss\";\nimport { quizService } from \"../../services/ServiceInitialization\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\n// Question component\nconst Questions = () => {\n  _s();\n\n  const [score, setScore] = useState(0);\n  const [questionIndex, setQuestionIndex] = useState(0);\n  const [answer, setAnswer] = useState(\"\");\n  const [data, setData] = useState([]);\n\n  const loadData = async () => {\n    const newData = await quizService.getData();\n    setData(newData);\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []); // Function for set Score to 0\n\n  const restart = () => {\n    setScore(0);\n    setAnswer(\"\");\n    setQuestionIndex(0);\n  }; // Function for to send answer. If its right answer - number of points grow\n\n\n  const submit = event => {\n    var _data$questionIndex;\n\n    event.preventDefault();\n    const isRightAnswer = answer === ((_data$questionIndex = data[questionIndex]) === null || _data$questionIndex === void 0 ? void 0 : _data$questionIndex.rightAnswer);\n\n    if (isRightAnswer) {\n      setScore(score + 1);\n    }\n\n    const isMoreQuestionsAvailable = questionIndex < data.length;\n\n    if (isMoreQuestionsAvailable) {\n      setQuestionIndex(questionIndex + 1);\n    }\n  };\n\n  const onChange = e => {\n    setAnswer(e.target.value);\n  }; // If index less then length of array with questions, then new question will show on the page, if not - then result will show\n\n\n  if (questionIndex < data.length) {\n    var _data$questionIndex2, _data$questionIndex3;\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: (_data$questionIndex2 = data[questionIndex]) === null || _data$questionIndex2 === void 0 ? void 0 : _data$questionIndex2.question\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 16\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), (_data$questionIndex3 = data[questionIndex]) === null || _data$questionIndex3 === void 0 ? void 0 : _data$questionIndex3.choices.map(c => {\n        var _data$questionIndex4;\n\n        return /*#__PURE__*/_jsxDEV(\"h5\", {\n          children: /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"radio\",\n              name: \"choice\",\n              value: c,\n              onChange: onChange,\n              checked: answer === c\n            }, (_data$questionIndex4 = data[questionIndex]) === null || _data$questionIndex4 === void 0 ? void 0 : _data$questionIndex4.key, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: c\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)\n        }, c, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.btn,\n        type: \"button\",\n        onClick: submit,\n        children: \"check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"score:\", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: styles.btn,\n        type: \"button\",\n        onClick: urestart,\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h5\", {\n      children: [\"score:\", score]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Questions, \"rl6fSn2lAC/eMP08aYQITXwBTME=\");\n\n_c = Questions;\nexport default Questions;\n\nvar _c;\n\n$RefreshReg$(_c, \"Questions\");","map":{"version":3,"names":["React","useState","useEffect","styles","quizService","Questions","score","setScore","questionIndex","setQuestionIndex","answer","setAnswer","data","setData","loadData","newData","getData","restart","submit","event","preventDefault","isRightAnswer","rightAnswer","isMoreQuestionsAvailable","length","onChange","e","target","value","question","choices","map","c","key","btn","urestart"],"sources":["/home/ekaterina/quiz/client/src/app/components/questions/Questions.tsx"],"sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport {Quiz} from \"src/app/logic/model/Quiz\";\nimport styles from \"src/app/components/button/Button.module.scss\";\nimport {quizService} from \"../../services/ServiceInitialization\";\nimport useFunc from \"./UseFunctions\";\n\n// Question component\nconst Questions: React.FC = () => {\n\n  const [score, setScore] = useState<number>(0);\n  const [questionIndex, setQuestionIndex] = useState<number>(0);\n  const [answer, setAnswer] = useState<string>(\"\");\n\n  const [data, setData] = useState<Quiz[]>([]);\n  const loadData: () => void = async () => {\n    const newData: Quiz[] = await quizService.getData();\n    setData(newData);\n  };\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  // Function for set Score to 0\n  const restart: () => void = () => {\n    setScore(0);\n    setAnswer(\"\");\n    setQuestionIndex(0);\n  };\n\n  // Function for to send answer. If its right answer - number of points grow\n  const submit: (event: React.MouseEvent) => void = (\n    event: React.MouseEvent,\n  ) => {\n    event.preventDefault();\n\n    const isRightAnswer: boolean = answer === data[questionIndex]?.rightAnswer;\n    if (isRightAnswer) {\n      setScore(score + 1);\n    }\n\n    const isMoreQuestionsAvailable: boolean = questionIndex < data.length;\n    if (isMoreQuestionsAvailable) {\n      setQuestionIndex(questionIndex + 1);\n    }\n  };\n\n  const onChange: (e: React.ChangeEvent<HTMLInputElement>) => void = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setAnswer(e.target.value);\n  };\n\n  // If index less then length of array with questions, then new question will show on the page, if not - then result will show\n  if (questionIndex < data.length) {\n    return (\n      <div>\n        <label><h3>{data[questionIndex]?.question}</h3></label>\n        {data[questionIndex]?.choices.map((c: string) => {\n          return (\n            <h5 key={c}>\n              <label>\n                <input\n                  type=\"radio\"\n                  name=\"choice\"\n                  value={c}\n                  onChange={onChange}\n                  checked={answer === c}\n                  key= {data[questionIndex]?.key}\n                />\n                <span>{c}</span>\n              </label>\n            </h5>\n          );\n        })}\n\n        <button\n          className={styles.btn}\n          type=\"button\"\n          onClick={submit}\n        >\n          check\n        </button>\n\n        <p>\n          score:\n          {score}\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <form>\n      <div>\n        <button\n          className={styles.btn}\n          type=\"button\"\n          onClick={urestart}\n        >\n          Restart\n        </button>\n      </div>\n      <h5>\n        score:\n        {score}\n      </h5>\n    </form>\n  );\n};\n\nexport default Questions;"],"mappings":"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"},"metadata":{},"sourceType":"module"}