{"ast":null,"code":"/** Methods request */\nexport let FetchMethod;\n\n(function (FetchMethod) {\n  FetchMethod[\"GET\"] = \"GET\";\n  FetchMethod[\"DELETE\"] = \"DELETE\";\n})(FetchMethod || (FetchMethod = {}));\n\nexport const request = async (url, method) => {\n  const rawResponse = await fetch(url, {\n    method\n  }); // Response processing\n\n  if (rawResponse.ok) {\n    return method !== FetchMethod.DELETE ? rawResponse.json() : undefined;\n  }\n\n  throw new Error(String(rawResponse.status));\n};\nexport const fetchRequest = {\n  /**\n  * Create get request\n  */\n  get: async url => {\n    return request(url, FetchMethod.GET);\n  }\n};","map":{"version":3,"names":["FetchMethod","request","url","method","rawResponse","fetch","ok","DELETE","json","undefined","Error","String","status","fetchRequest","get","GET"],"sources":["/home/ekaterina/quiz/client/src/app/service/FetchUtils.ts"],"sourcesContent":["/** Methods request */\nexport enum FetchMethod {\n  GET = \"GET\",\n  DELETE = \"DELETE\",\n}\n\nexport const request = async (url: string, method: FetchMethod): Promise<any> => {\n  const rawResponse = await fetch(url, {method});\n\n  // Response processing\n  if (rawResponse.ok) {\n    return method !== FetchMethod.DELETE\n      ? rawResponse.json()\n      : undefined;\n  }\n\n  throw new Error(String(rawResponse.status));\n};\n\nexport const fetchRequest = {\n\n  /**\n\t * Create get request\n\t */\n  get: async <T>(url: string): Promise<T> => { return request(url, FetchMethod.GET); },\n\n};"],"mappings":"AAAA;AACA,WAAYA,WAAZ;;WAAYA,W;EAAAA,W;EAAAA,W;GAAAA,W,KAAAA,W;;AAKZ,OAAO,MAAMC,OAAO,GAAG,OAAOC,GAAP,EAAoBC,MAApB,KAA0D;EAC/E,MAAMC,WAAW,GAAG,MAAMC,KAAK,CAACH,GAAD,EAAM;IAACC;EAAD,CAAN,CAA/B,CAD+E,CAG/E;;EACA,IAAIC,WAAW,CAACE,EAAhB,EAAoB;IAClB,OAAOH,MAAM,KAAKH,WAAW,CAACO,MAAvB,GACHH,WAAW,CAACI,IAAZ,EADG,GAEHC,SAFJ;EAGD;;EAED,MAAM,IAAIC,KAAJ,CAAUC,MAAM,CAACP,WAAW,CAACQ,MAAb,CAAhB,CAAN;AACD,CAXM;AAaP,OAAO,MAAMC,YAAY,GAAG;EAE1B;AACF;AACA;EACEC,GAAG,EAAE,MAAUZ,GAAV,IAAsC;IAAE,OAAOD,OAAO,CAACC,GAAD,EAAMF,WAAW,CAACe,GAAlB,CAAd;EAAuC;AAL1D,CAArB"},"metadata":{},"sourceType":"module"}