{"ast":null,"code":"import { QuizRound } from \"src/app/model/QuizRoundModel\";\nimport { fetchRequest } from \"./FetchUtils\";\n\n/**\n * Class which use when the client have internet\n */\nexport class QuizService {\n  constructor(baseUrl) {\n    this.baseUrl = void 0;\n    this.baseUrl = baseUrl;\n  }\n  /**\n  * Method which return data\n  */\n\n\n  async getQuestions() {\n    const url = this.baseUrl;\n    const {\n      content: questionsDTO\n    } = await fetchRequest.get(url);\n    const questions = questionsDTO.map(questionsElement => {\n      return new QuizRound(questionsElement);\n    });\n    return questions;\n  }\n\n}","map":{"version":3,"names":["QuizRound","fetchRequest","QuizService","constructor","baseUrl","getQuestions","url","content","questionsDTO","get","questions","map","questionsElement"],"sources":["/home/ekaterina/quiz/client/src/app/service/QuizService.ts"],"sourcesContent":["import {QuizRound} from \"src/app/model/QuizRoundModel\";\nimport {fetchRequest} from \"./FetchUtils\";\nimport {questionsRoundDTO} from \"./IQuestionsDTO\";\n\n/**\n * Class which use when the client have internet\n */\nexport class QuizService {\n\n  private baseUrl: string;\n\n  constructor(baseUrl: string) {\n    this.baseUrl = baseUrl;\n  }\n\n  /**\n\t * Method which return data\n\t */\n  public async getQuestions(): Promise<QuizRound[]> {\n    const url = this.baseUrl;\n    const {content: questionsDTO}: {content: QuizRound[]} = await fetchRequest.get(url);\n\n    const questions = questionsDTO.map((questionsElement: questionsRoundDTO) => {\n      return new QuizRound(questionsElement);\n    });\n\n    return questions;\n  }\n\n}\n"],"mappings":"AAAA,SAAQA,SAAR,QAAwB,8BAAxB;AACA,SAAQC,YAAR,QAA2B,cAA3B;;AAGA;AACA;AACA;AACA,OAAO,MAAMC,WAAN,CAAkB;EAIvBC,WAAW,CAACC,OAAD,EAAkB;IAAA,KAFrBA,OAEqB;IAC3B,KAAKA,OAAL,GAAeA,OAAf;EACD;EAED;AACF;AACA;;;EAC2B,MAAZC,YAAY,GAAyB;IAChD,MAAMC,GAAG,GAAG,KAAKF,OAAjB;IACA,MAAM;MAACG,OAAO,EAAEC;IAAV,IAAkD,MAAMP,YAAY,CAACQ,GAAb,CAAiBH,GAAjB,CAA9D;IAEA,MAAMI,SAAS,GAAGF,YAAY,CAACG,GAAb,CAAkBC,gBAAD,IAAyC;MAC1E,OAAO,IAAIZ,SAAJ,CAAcY,gBAAd,CAAP;IACD,CAFiB,CAAlB;IAIA,OAAOF,SAAP;EACD;;AApBsB"},"metadata":{},"sourceType":"module"}